id: OauthAuthorize
steps:

- date:
    _output: /now
    format: X

- read:
    _output: /client
    model: OauthClient
    id: /client_id

- normalize-scope:
    _output: /scope
    scope: /scope

- if:
    left: /cookies/session
    then:
      - object:
          _output: /session-filters
          token: /cookies/session
      - select:
          _output: /sessions
          model: UserSession
          filters: /session-filters
          selections:
            items:
              user:
                id:
                name:
          limit: 1
      - if:
          left: /sessions/items/0/user
          then:
            - object:
                _output: /user
                id: /sessions/items/0/user/id
                name: /sessions/items/0/user/name

- if:
    left: /username
    then:
      - object:
          _output: /filters
          name: /username
      - select:
          _output: /users
          model: User
          filters: /filters
      - if:
          left: /password
          right: /users/items/0/password
          then:
            - object:
                _output: /user
                id: /users/items/0/id
                name: /users/items/0/name
            - object:
                _output: /session
                user: /users/items/0/id
                created: /now
            - secure-token:
                _output: /session/token
            - create:
                _output: /session
                model: UserSession
                data: /session
            - object:
                _output: /data/cookies/session
                value: /session/token
                path: {=: /oauth}

- if:
    left: /user
    then:

      - if:
          left: /client/trusted
          then:
            - static:
                _output: /allow
                value: "true"
          else:
            # Check if authorization was already given by checking the existence of an access token.
            - object:
                _output: /filters
                client: /client/id
                user: /user/id
                scope: /scope
            # Only remember login when token is still valid for at least 15 minutes.
            - math:
                _output: /filters/expires_gt
                formula: now + 900
                now: /now
            - select:
                _output: /tokens
                model: OauthAccessToken
                filters: /filters
                selections:
                  items:
                    id:
            - if:
                left: /tokens/items/0/id
                then:
                  - static:
                      _output: /allow
                      value: "true"

      - if:
          left: /allow
          right: "true"
          then:
            - if:
                left: /response_type
                right: code
                then:
                  - object:
                      _output: /authorization-code
                      client: /client/id
                      user: /user/id
                      scope: /scope
                      created: /now
                  - math:
                      _output: /authorization-code/expires
                      formula: 'now + 60'
                      now: /now
                  - secure-token:
                      _output: /authorization-code/code
                  - create:
                      model: OauthAuthorizationCode
                      data: /authorization-code
                  - handlebars:
                      _output: /redirect_uri
                      template: '{{redirect_uri}}?code={{encode code}}&state={{encode state}}'
                      redirect_uri: /redirect_uri
                      code: /authorization-code/code
                      state: /state
                  - object:
                      _output: /data
                      status: 302
                      body: 'Redirecting...'
                      redirect: /redirect_uri
                else:
                  - object:
                      _output: /token
                      client: /client/id
                      user: /user/id
                      scope: /scope
                      created: /now
                  - math:
                      _output: /token/expires
                      formula: 'now + 84600'
                      now: /now
                  - secure-token:
                      _output: /token/token
                  - create:
                      model: OauthAccessToken
                      data: /token
                  - handlebars:
                      _output: /redirect_uri
                      template: '{{redirect_uri}}#token={{encode token}}&state={{encode state}}'
                      redirect_uri: /redirect_uri
                      token: /token/token
                      state: /state
                  - object:
                      _output: /data
                      status: 302
                      body: 'Redirecting...'
                      redirect: /redirect_uri
          else:
            - handlebars:
                _output: /data/body
                client: /client/name
                client_id: /client_id
                response_type: /response_type
                redirect_uri: /redirect_uri
                scope: /scope
                state: /state
                template: |
                  <!doctype html>
                  <html>
                    <body>
                      <h1>Authorize</h1>
                      <p>Do you allow {{client}} access to your account?</p>
                      <form action="/oauth/authorize" method="post">
                        <input type="hidden" name="allow" value="true">
                        <input type="hidden" name="client_id" value="{{client_id}}">
                        <input type="hidden" name="response_type" value="{{response_type}}">
                        <input type="hidden" name="redirect_uri" value="{{redirect_uri}}">
                        <input type="hidden" name="scope" value="{{scope}}">
                        <input type="hidden" name="state" value="{{state}}">
                        <input type="submit" value="Allow">
                        <a href="{{redirect_uri}}">Deny</a>
                      </form>
                    </body>
                  </html>
    else:
      - handlebars:
          _output: /data/body
          client_id: /client_id
          response_type: /response_type
          redirect_uri: /redirect_uri
          scope: /scope
          state: /state
          template: |
            <!doctype html>
            <html>
              <body>
                <h1>Login</h1>
                <form action="/oauth/authorize" method="post">
                  <input type="hidden" name="client_id" value="{{client_id}}">
                  <input type="hidden" name="response_type" value="{{response_type}}">
                  <input type="hidden" name="redirect_uri" value="{{redirect_uri}}">
                  <input type="hidden" name="scope" value="{{scope}}">
                  <input type="hidden" name="state" value="{{state}}">
                  <div>
                    <label>
                      Username
                      <input type="text" name="username">
                    </label>
                  </div>
                  <div>
                    <label>
                      Password
                      <input type="password" name="password">
                    </label>
                  </div>
                  <input type="submit" value="Login">
                </form>
              </body>
            </html>

# Set security related headers.
- static:
    _output: /data/headers/X-Frame-Options
    value: DENY
- static:
    _output: /data/headers/Cache-Control
    value: no-store
- static:
    _output: /data/headers/Pragma
    value: no-cache
