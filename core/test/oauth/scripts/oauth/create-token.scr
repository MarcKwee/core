# OauthCreateToken

# Script parameters:
# /client/id
# /user/id
# /scope
# Output:
# /token/token
# /token/expires
# /token/refresh_token

/now = int date "X"

/token = {
  client: /client/id,
  user: /user/id,
  scope: /scope,
  created: /now,
  token: secureToken 256,
  expires: /now + 43200
}
/ = /session/id then {{
  /token/session = /session/id
}}
mutation {
  createOauthAccessToken(input: /token) { id }
}

# Always create the refresh token. We use it to remember the login.
/refresh_token = {
  client: /client/id,
  user: /user/id,
  scope: /scope,
  created: /now,
  token: secureToken 256,
  expires: /now + 432000
}

# Confidential clients (often API integrations) must use the refresh token within 30 days.
/ = (/client/type == "confidential") then {{
  /refresh_token/expires = /now + 2592000
}}

mutation {
  createOauthRefreshToken(input: /refresh_token) { id }
}

# Add refresh token for confidential clients.
/ = (/client/type == "confidential") then {{
  /token/refresh_token = /refresh_token/token
}}

/ = /token
